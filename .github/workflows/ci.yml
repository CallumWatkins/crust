name: "test-on-pr"
on: [pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  eslint:
    if: |
      !contains(github.event.pull_request.title, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: install app dependencies
      run: npm ci
    - name: ESLint
      run: npm run eslint

  stylelint:
    if: |
      !contains(github.event.pull_request.title, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: install app dependencies
      run: npm ci
    - name: Stylelint
      run: npm run stylelint

  clippy:
    if: |
      !contains(github.event.pull_request.title, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: install Rust stable and Clippy
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy
    - name: install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - run: mkdir ./dist
    - name: clippy check
      uses: reinismu/clippy-check@ce65cdb6b7d4419dcd2e3b2125134b89c1dadecf # Change to original once nesting is supported: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        working-directory: src-tauri
        args: --all-features
        name: clippy_check

  build:
    if: |
      !contains(github.event.pull_request.title, '[skip ci]')
    needs: [eslint, stylelint, clippy]
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: src-tauri
    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - name: install app dependencies
      run: npm ci
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v3
      with:
        name: bundle-${{ matrix.platform }}
        path: ${{ github.workspace }}/src-tauri/target/release/bundle/
        retention-days: 1